//8.3
#include < iostream >
#include < string >
#include < cctype >
#include < algorithm >
  using namespace std;

bool f_toupper(string);
void f_input(string & );
int main() {
  string a;
  f_input(a);
  system("pause");
  return 0;
}

void f_input(string & aa) {
  cout << "please now enter a string: ";
  while (cin >> aa) {
    if (aa == "q"){ //不要用=这个赋值号
      cout << "you wanna to quit,ok byebye.\n";
      return;
    } else if (f_toupper(aa)) {
      transform(aa.begin(), aa.end(), aa.begin(), ::toupper); //transform()这个是stl中的东西，不是string函数。
      //这个句子需要两个支持 #include<cctype>  #include <algorithm>
      cout << aa << endl;
      getchar();
      cout << "please now enter a string: ";
    } else {
      cout << "you enter a wrong type! \n";
      //f_input(aa);这边可以放一个递归调用 --但是因为return只能回到上一级调用他的地方，所以使用递归，只要运行它一次，退出它的时候也需要一层一层退出
    }
  }
}

bool f_toupper(string q){ //string里可以有各种比如数字或其他成分，所以该函数只筛选那些全都是字母的string
  int num_alpha = 0;
  int aa = q.length(); //string的length()函数返回字符的个数
  for (int i = 0; i < aa; i++) {
    if (isalpha(q[i])) //string的单个值基本上和char差不多,用toupper(q[i]);试了编译也通过
      num_alpha++; //统计q字符串中有多少个字母
  }
  if (aa == num_alpha)
    return true;
  else
    return false;
}
