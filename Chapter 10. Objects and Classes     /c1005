#include < iostream >
  using namespace std;
const int q = 4;

struct customer {
  char fullname[35];
  double payment;
};
typedef customer Item; //类型别称
typedef customer Item;
class Stack {
  private:
    enum {
      MAX = 10
    };
  Item items[MAX];
  int top;
  public:
    Stack();
  bool isempty() const;
  bool isfull() const;
  bool push(const Item & item);
  bool pop(Item & item);
};

Stack::Stack() {
  top = 0;
}

bool Stack::isempty() const {
  return top == 0;
}

bool Stack::isfull() const {
  return top == MAX;
}

bool Stack::push(const Item & item) {
  if (top < MAX) {
    items[top++] = item;
    return true;
  } else
    return false;
}

bool Stack::pop(Item & item) {
  if (top > 0) {
    item = items[--top];
    //cout<<"items[4]:"<<items[3].fullname<<";"<<items[3].payment<<endl;用这个可以测得出来，pop并没有真的被弹出来，这个只是模拟，但是加入成员的那个push（）是真的加进去
    return true;
  } else
    return false;
}

#include < iostream >
#include < cctype >
  int main() {
    using namespace std;
    Stack st;
    char ch;
    double total_pop = 0;
    customer po {
      "wangxiaoming",
      1230
    };
    cout << "Please enter A to add a purchase order,\n" <<
      "P to process a PO, or Q to quit.\n";
    while (cin >> ch && toupper(ch) != 'Q') {
      while (cin.get() != '\n')
        continue;
      if (!isalpha(ch)) {
        cout << '\a';
        continue;
      }
      switch (ch) {
      case 'A':
      case 'a':
        cout << "Enter a PO number to add: ";
        cin >> po.fullname >> po.payment;
        if (st.isfull())
          cout << "stack already full\n";
        else
          st.push(po);
        break;
      case 'P':
      case 'p':
        if (st.isempty())
          cout << "stack already empty\n";
        else {
          st.pop(po);
          cout << "PO #" << po.fullname << " popped\n";
          total_pop += total_pop + po.payment;
          //类方法中不够完善的方便，可以通过调用额main（）实现自己来写
        }
        break;
      }
      cout << "Please enter A to add a purchase order,\n" <<
        "P to process a PO, or Q to quit.\n";
    }
    cout << "the total payment that is pop out : " << total_pop << endl;
    cout << "Bye\n";
    return 0;
  }
